@page "/fetchdata"
@using BlazorApp1.Shared
@using BlazorApp1.Domain
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <EditForm Model="@forecastToAdd" OnValidSubmit="@AddForecast">
        <ValidationSummary />

        <InputText @bind-Value="forecastToAdd!.Summary"></InputText>
        <InputDate @bind-Value="forecastToAdd!.Date"></InputDate>
        <InputNumber @bind-Value="forecastToAdd!.TemperatureC"></InputNumber>
        <button type="submit">Submit</button>
    </EditForm>
}

@code {
    private WeatherForecast[]? forecasts;
    private WeatherForecast? forecastToAdd;

    protected override async Task OnInitializedAsync()
    {
        await ReloadDataAsync();
        forecastToAdd = new WeatherForecast
            {
                Date = DateTime.Now
            };
    }

    private async Task AddForecast()
    {
        if (forecastToAdd != null)
        {
            var response = await Http.PostAsJsonAsync<WeatherForecast>("WeatherForecast", forecastToAdd);
        }

        await ReloadDataAsync();
    }

    private async Task ReloadDataAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }
}
